# vim: set ft=caddyfile :


# https://caddyserver.com/docs/caddyfile/options
{
	admin off
	log {
		level INFO
	}
	grace_period 1s
	auto_https disable_redirects
	skip_install_trust
	on_demand_tls {
		ask http://localhost:9001
	}
	servers :443 {
		name https
		listener_wrappers {
			proxy_protocol {
				allow 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.0/8 fd00::/8 ::1/128
				fallback_policy reject
			}
			tls
		}
		protocols h1 h2
		strict_sni_host on
	}
}

(handlers) {
	header >Alt-Svc "h2=\":443\"; ma=86400"

	handle /oauth2/* {
		reverse_proxy http://oauth2-proxy:4180 {
			# oauth2-proxy requires the X-Forwarded-{Proto,Host,Uri} and X-Real-IP headers. The
			# reverse_proxy directive automatically sets X-Forwarded-{For,Proto,Host} headers.
			#
			# https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#defaults
			header_up X-Forwarded-Uri {uri}
			header_up X-Real-IP {remote_host}
		}
	}

	handle {
		forward_auth http://oauth2-proxy:4180 {
			uri /oauth2/auth

			# oauth2-proxy requires the X-Forwarded-{Proto,Host,Uri} and X-Real-IP headers. The
			# forward_auth directive automatically sets the X-Forwarded-{For,Proto,Host,Method,Uri}
			# headers.
			#
			# https://caddyserver.com/docs/caddyfile/directives/forward_auth#expanded-form
			header_up X-Real-IP {remote_host}

			# If needed, you can copy headers from the oauth2-proxy response to the request sent to the
			# upstream. Make sure to configure the --set-xauthrequest flag to enable this feature.
			copy_headers X-Auth-Request-User

			# If oauth2-proxy does not return a 2xx status, redirect the client to the sign-in page. The
			# forward_auth directive automatically configures a "status 2xx" response handler, so this
			# response handler will handle all other status codes.
			#
			# https://caddyserver.com/docs/caddyfile/directives/forward_auth#expanded-form
			handle_response {
				extra_placeholders {
					disable_loadavg_placeholders
				}
				redir * /oauth2/sign_in?rd={extra.http.request.url.query_escaped}
			}
		}

		# If oauth2-proxy returns a 2xx status, the request is then proxied to the upstream.
		reverse_proxy http://app:5000 {
			# "[Y]ou need to make sure that [the proxy server] buffers slow clients when you use
			# default Gunicorn workers. Without this buffering Gunicorn will be easily susceptible to
			# denial-of-service attacks."
			#
			# https://docs.gunicorn.org/en/stable/deploy.html
			request_buffers unlimited
		}
	}
}

biomappings-curation-app.localhost {
	tls internal
	import handlers
}

biomappings-curation-app-lb-00cc5d7d789bc0c6.elb.us-east-1.amazonaws.com {
	tls internal
	import handlers
}

https:// {
	tls {
		on_demand
		issuer acme {
			profile tlsserver
			disable_http_challenge
		}
	}
	import handlers
}

:9001 {
	@not_hostname not query domain={$HOSTNAME}
	respond @not_hostname 403
}
